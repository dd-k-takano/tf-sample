name: terraform apply for production

on:
  workflow_dispatch:
    title:
      version:
        required: true
        description: 'Issue Title'

env:
  TERRAFORM_WORKDIR: '_infra/tf/prd'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  apply:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.TERRAFORM_WORKDIR }}

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.5

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -no-color
        continue-on-error: true

      - name: Create Issue Comment
        uses: actions/github-script@v3
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
          APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
            #### Terraform Apply ðŸ¥º\`${{ steps.apply.outcome }}\`

            <details><summary>[Prd] Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            [Run : ${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.TERRAFORM_WORKDIR }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: ${{ github.event.inputs.title }},
              body: output
            })
